- Quando gostaria de usar um repositório remoto em vez de manter o trabalho local?

Quando necessito compartilhar meu código do projeto com outros colaboradores do projeto ou mesmo criar um backup remoto
do projeto.

- Por que você prefere efetuar pull de alterações manualmente do que deixar o Git atualizar-se automaticamente com o seu repositório remoto?

Porque é possível que algumas alterações locais ainda estejam em fase de experimento ou não devem ir para o repositório remoto.

- Descreva as diferenças entre bifurcações, clones e branches. Quando você usaria um e não os outros?

Bifurcações (forks) é o processo de criar uma cópia, remotamente, de um repositório também remoto no GitHub para assim implementar as próprias alterações. Clones são cópias assim como os forks, porém estes não dão créditos ao criador do projeto ao qual está sendo clonado. Os clones copiam o diretório remoto para o diretório local. Branches são galhos ou ramos usados para testar ou implementar funcionalidades distintas no mesmo projeto. Fork - quando quero ter remotamente uma cópia de um projeto de outro desenvolvedor e fazer minhas próprias alterações, clone quando quero copiar um repositório remoto para minha máquina e branch quando quero testar alguma nova funcionalidade e manter o projeto funcionando simultaneamente.

- Qual é o benefício de ter uma cópia do último estado conhecido do remoto armazenado localmente?

Verificar facilmente se houveram alterações nos arquivos remotos.

- Como você colaboraria sem usar Git ou GitHub? O que seria mais fácil e mais difícil?

Faria do método tradicional (do modo que fazia antes de conhecer Git ou GitHub): enviar o zip do projeto por e-mail, o colaborador fazer as alterações nos arquivos e enviar as alterações por e-mail, eu verificaria as alterações dele e as minhas e atualizaria meu projeto. Seria mais fácil a inexistência de tantos comandos para fazer alterações e o mais difícil seria a manutenção do projeto, pois teria um momento em que o repositório ficaria muito grande e complexo para ser enviado por e-mail, além das alterações de código que não seriam tão bem analisadas.

- Quando você gostaria de fazer alterações em um branch separado, e não diretamente no master? Quais são os benefícios de cada abordagem?

Quando estou trabalhando em uma funcionalidade experimental, que não pode ser integrada ao branch master no momento. Trabalhar em um branch separado permite uma melhor abordagem a bugs antes da funcionalidade ser integrada ao branch master e trabalhar no master gera um menor trabalho de integração dos branches.
